name: Laravel

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_database
        options: --health-cmd "mysqladmin ping --silent" --health-interval 10s

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, xml, pdo, pdo_mysql
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.composer/cache
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('resources/js/**/*') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Clear Composer cache
        run: composer clear-cache
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install --verbose --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install NPM dependencies
        run: npm install
      - name: Build Vite assets
        run: npm run build
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          until mysql -h 127.0.0.1 -u root -proot -e 'SHOW DATABASES'; do
            >&2 echo "MySQL is unavailable - sleeping"
            sleep 1
          done
      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: test_database
          DB_USERNAME: root
          DB_PASSWORD: root
        run: php artisan test
      - name: Run Jest tests
        run: npm test -- --coverage
